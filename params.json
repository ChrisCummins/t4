{"name":"t4","tagline":"A tool for generating tests as shell scripts from m4 macros","body":"### Overview\r\nt4 is a tool for conveniently generating application tests as shell scripts. t4\r\nconsists of two components, the first an m4 macro library `t4.m4' which defines\r\na number of useful macros for writing test scripts. Using this library, a user\r\ncan create concise test scripts using a combination of regular shell syntax and\r\nthe t4.m4 macros. These user-created files are referred to as t4 files. The\r\nsecond component, t4c, is a small program which generates executable shell\r\nscripts from these t4 files. This is analogous to writing configure.ac files and\r\nthen using GNU Autoconf to generate configure scripts.\r\n\r\n### Example file\r\nA very basic t4 file `hello-world.t4`:\r\n````\r\n# An example of a simple t4 file. The idea here is to merely demonstrate the\r\n# most basic t4 usage.\r\n\r\n# All t4 tests should begin with with the T4_INIT macro. This servers the\r\n# purpose of including a lot of set up boiler plate, such as parsing command\r\n# line options, and initialising a first test fixture. This macro should only be\r\n# used once per test, and should be the first t4 macro used.\r\nT4_INIT()\r\n\r\n# Run the command `ls' and fail if it does not succeed. This is the bread and\r\n# butter of any honest testing library, and will be used often.\r\nOK([ls])\r\n\r\n# Run the command `ls /path/to/nothing' and fail if it does succeed. The idea\r\n# here is to give it a command that you know should fail under normal\r\n# circumstances, and if it in fact succeeds, then this test fails. This form of\r\n# assertion is useful for testing known breaking conditions, bad inputs, error\r\n# cases etc.\r\nNOK([ls /path/to/nothing])\r\n\r\n# This wouldn't be a good example if it didn't print `Hello, World!'.\r\nT4_PRINT([Hello, World!])\r\n````\r\n\r\nTo compile, run and test:\r\n\r\n````\r\n  $ t4c -v -o hello-world.t4\r\n  t4c: generating 'hello-world.t4c'\r\n  t4c: processing m4 file 'hello-world.t4c'\r\n  t4c: removing m4 file 'hello-world.t4c'\r\n  $ ls -l\r\n  -rwxrwxr-x 1 chris chris  9745 Apr  5 01:49 hello-world\r\n  -rw-rw-r-- 1 chris chris  1223 Apr  5 01:18 hello-world.t4\r\n  $ ./hello-world\r\n  Hello, World!\r\n````\r\n\r\n### License\r\nCopyright (c) 2013 Christopher E. Cummins <chris.101@gmail.com>.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}